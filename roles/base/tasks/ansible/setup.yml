---
- name: ansible setup | ensure ansible latest version
  tags: ansible,ansible-setup
  package:
    name: ansible
    state: latest

- name: ansible setup | install required packages
  tags: ansible,ansible-setup,packages
  package:
    name:
      - acl
      - cron
      - dconf-cli
      - python3-psutil

- name: ansible setup | generate provision script from template
  tags: ansible,ansible-setup,scripts
  template:
    src: provision.sh.j2
    dest: /usr/local/bin/provision
    owner: root
    group: root
    mode: 0755

- name: ansible setup | cron | schedule automatic ansible provisioning
  tags: always,ansible
  cron:
    name: "ansible auto-provision"
    user: "{{maintainer_user}}"
    hour: "{{ ansible_cron_hour | default('*') }}"
    minute: "{{ ansible_cron_minute | default('*/30') }}"
    job: "/usr/local/bin/provision > /dev/null"
    # the -o option makes this cron job run only if there are changes to the repository
    # job: ansible-pull -o -U {{ my_ansible_repo }} -e "cron_job_name='auto-provision'" -e "user_login={{ user_login }}" -e "user_login={{ user_login }}" -e "git_user_name={{ git_user_name }}" -e "git_user_email={{ git_user_email }}" -e "telegram_chat_id={{ telegram_chat_id }}" -e "telegram_token={{ telegram_token }}" -e "healthcheck_uuid={{ healthcheck_uuid }}" 2>> /home/ansible/ansible-pull.error.log >>/home/ansible/ansible-pull.success.log

- name: ansible setup | cron | schedule ansible cleanup at boot
  tags: cron
  cron:
    name: "ansible refresh at boot"
    user: "{{maintainer_user}}"
    special_time: reboot
    job: "/bin/rm -rf /home/{{maintainer_user}}/.ansible"
